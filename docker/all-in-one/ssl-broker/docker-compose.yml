---
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    restart: always
    hostname: zookeeper
    container_name: zookeeper
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      retries: 20
      interval: 10s
    ports:
      - 2181:2181
      - 2182:2182
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.zookeeper.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${SSL_PASSWORD}
      ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.zookeeper.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${SSL_PASSWORD}
      ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      ZOOKEEPER_SSL_CIPHER_SUITES: ${SSL_CIPHER_SUITES}
      ZOOKEEPER_SSL_CLIENT_AUTH: need
      ZOOKEEPER_AUTH_PROVIDER_X509: org.apache.zookeeper.server.auth.X509AuthenticationProvider
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_jaas.conf
    volumes:
      - ${DIR}/secrets:/etc/kafka/secrets

  kafka-1:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka-1
    container_name: kafka-1
    healthcheck:
      test: nc -vz kafka-1 9091 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - ${DIR}/secrets:/etc/kafka/secrets
    ports:
      - 9091:9091
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_ZOOKEEPER_SSL_CIPHER_SUITES: ${SSL_CIPHER_SUITES}
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-1.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-1.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka-1:9091
      KAFKA_SUPER_USERS: User:kafka;User:kafka-1;User:kafka-2;User:kafka-3;User:superUser;User:ANONYMOUS
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka.common.network=OFF"
      KAFKA_BROKER_ID: 101
      KAFKA_BROKER_RACK: "r1"
      KAFKA_JMX_PORT: 9991
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
      KAFKA_SSL_CIPHER_SUITES: ${SSL_CIPHER_SUITES}
      KAFKA_SSL_CLIENT_AUTH: "requested"
      KAFKA_NUM_REPLICA_FETCHERS: ${KAFKA_NUM_REPLICA_FETCHERS}
      KAFKA_NUM_NETWORK_THREADS: ${KAFKA_NUM_NETWORK_THREADS}
      KAFKA_MESSAGE_MAX_BYTES: ${KAFKA_MESSAGE_MAX_BYTES}
      KAFKA_REPLICA_FETCH_MAX_BYTES: ${KAFKA_REPLICA_FETCH_MAX_BYTES}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_LISTENER_NAME_SSL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf

  kafka-2:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka-2
    container_name: kafka-2
    healthcheck:
      test: nc -vz kafka-2 9092 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - ${DIR}/secrets:/etc/kafka/secrets
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_ZOOKEEPER_SSL_CIPHER_SUITES: ${SSL_CIPHER_SUITES}
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-2.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-2.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka-2:9092
      KAFKA_SUPER_USERS: User:kafka;User:kafka-1;User:kafka-2;User:kafka-3;User:superUser;User:ANONYMOUS
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka.common.network=OFF"
      KAFKA_BROKER_ID: 102
      KAFKA_BROKER_RACK: "r2"
      KAFKA_JMX_PORT: 9992
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
      KAFKA_SSL_CIPHER_SUITES: ${SSL_CIPHER_SUITES}
      KAFKA_SSL_CLIENT_AUTH: "requested"
      KAFKA_NUM_REPLICA_FETCHERS: ${KAFKA_NUM_REPLICA_FETCHERS}
      KAFKA_NUM_NETWORK_THREADS: ${KAFKA_NUM_NETWORK_THREADS}
      KAFKA_MESSAGE_MAX_BYTES: ${KAFKA_MESSAGE_MAX_BYTES}
      KAFKA_REPLICA_FETCH_MAX_BYTES: ${KAFKA_REPLICA_FETCH_MAX_BYTES}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_LISTENER_NAME_SSL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf

  kafka-3:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka-3
    container_name: kafka-3
    healthcheck:
      test: nc -vz kafka-3 9093 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - ${DIR}/secrets:/etc/kafka/secrets
    ports:
      - 9093:9093
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_ZOOKEEPER_SSL_CIPHER_SUITES: ${SSL_CIPHER_SUITES}
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-3.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-3.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka-3:9093
      KAFKA_SUPER_USERS: User:kafka;User:kafka-1;User:kafka-2;User:kafka-3;User:superUser;User:ANONYMOUS
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka.common.network=OFF"
      KAFKA_BROKER_ID: 103
      KAFKA_BROKER_RACK: "r3"
      KAFKA_JMX_PORT: 9993
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3_truststore_creds
      KAFKA_SSL_CIPHER_SUITES: ${SSL_CIPHER_SUITES}
      KAFKA_SSL_CLIENT_AUTH: "requested"
      KAFKA_NUM_REPLICA_FETCHERS: ${KAFKA_NUM_REPLICA_FETCHERS}
      KAFKA_NUM_NETWORK_THREADS: ${KAFKA_NUM_NETWORK_THREADS}
      KAFKA_MESSAGE_MAX_BYTES: ${KAFKA_MESSAGE_MAX_BYTES}
      KAFKA_REPLICA_FETCH_MAX_BYTES: ${KAFKA_REPLICA_FETCH_MAX_BYTES}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-3.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${SSL_PASSWORD}
      KAFKA_LISTENER_NAME_SSL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^CN=([a-zA-Z0-9.]*).*$$/$$1/ , DEFAULT
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus:latest
    volumes:
      - ${DIR}/../monitoring/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  event-publisher:
    image: event-publisher:latest
    container_name: event-publisher
    hostname: event-publisher
    environment:
      CHANNEL_MODE: ${CHANNEL_MODE}
      LOG_LEVEL: INFO
      BROKER_CONFIG: |
        bootstrap.servers=kafka-1:9091,kafka-2:9092,kafka-3:9093
      PRODUCER_TYPE: ${PRODUCER_TYPE}
      PRODUCER_CONFIG: |
        security.protocol=SSL
        ssl.truststore.location=/etc/kafka/secrets/kafka.producer.truststore.jks
        ssl.truststore.password=${SSL_PASSWORD}
        ssl.keystore.location=/etc/kafka/secrets/kafka.producer.keystore.jks
        ssl.keystore.password=${SSL_PASSWORD}
        ssl.key.password=${SSL_PASSWORD}
      OUTBOUND_TOPIC_NAME: kfk-local.meetup-events
    depends_on:
      - event-receiver
    volumes:
      - ${DIR}/secrets:/etc/kafka/secrets

  event-receiver:
    image: event-receiver:latest
    container_name: event-receiver
    hostname: event-receiver
    ports:
      - 8854:8854
    environment:
      CHANNEL_MODE: ${CHANNEL_MODE}
      LOG_LEVEL: INFO
      BROKER_CONFIG: |
        bootstrap.servers=kafka-1:9091,kafka-2:9092,kafka-3:9093
      PARALLEL_CONSUMER_MAX_CONCURRENCY: ${CONSUMER_CONCURRENCY}
      CONSUMER_CONFIG: |
        security.protocol=SSL
        ssl.truststore.location=/etc/kafka/secrets/kafka.consumer.truststore.jks
        ssl.truststore.password=${SSL_PASSWORD}
        ssl.keystore.location=/etc/kafka/secrets/kafka.consumer.keystore.jks
        ssl.keystore.password=${SSL_PASSWORD}
        ssl.key.password=${SSL_PASSWORD}
      INBOUND_CONFIG: |
        auto.offset.reset=earliest
        enable.auto.commit=false
      INBOUND_TOPIC_NAME: kfk-local.meetup-events
    volumes:
      - ${DIR}/secrets:/etc/kafka/secrets
